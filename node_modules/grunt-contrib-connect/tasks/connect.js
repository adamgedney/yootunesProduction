/*
 * grunt-contrib-connect
 * http://gruntjs.com/
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman, contributors
 * Licensed under the MIT license.
 */

module.exports=function(e){var t=require("path"),n=require("connect"),r=require("http"),i=require("https"),s=require("connect-livereload"),o=require("open");e.registerMultiTask("connect","Start a connect web server.",function(){var u=this.options({protocol:"http",port:8e3,hostname:"localhost",base:".",directory:null,keepalive:!1,debug:!1,livereload:!1,open:!1,middleware:function(e,t){var n=[],r=t.directory||t.base[t.base.length-1];return Array.isArray(t.base)||(t.base=[t.base]),t.base.forEach(function(t){n.push(e.static(t))}),n.push(e.directory(r)),n}});u.protocol!=="http"&&u.protocol!=="https"&&e.fatal("protocol option must be 'http' or 'https'"),Array.isArray(u.base)?u.base=u.base.map(function(e){return t.resolve(e)}):u.base=t.resolve(u.base),u.hostname==="*"&&(u.hostname=null),u.port==="?"&&(u.port=0);var a=u.middleware?u.middleware.call(this,n,u):[];if(e.option("debug")||u.debug===!0)n.logger.format("grunt","[D] server :method :url :status :res[content-length] - :response-time ms".magenta),a.unshift(n.logger("grunt"));u.livereload!==!1&&(u.livereload===!0&&(u.livereload=35729),a.unshift(s({port:u.livereload})));var f=this.async(),l=this.target,c=this.flags.keepalive||u.keepalive,h=n.apply(null,a),p=null;u.protocol==="https"?p=i.createServer({key:u.key||e.file.read(t.join(__dirname,"certs","server.key")).toString(),cert:u.cert||e.file.read(t.join(__dirname,"certs","server.crt")).toString(),ca:u.ca||e.file.read(t.join(__dirname,"certs","ca.crt")).toString(),passphrase:u.passphrase||"grunt"},h):p=r.createServer(h),p.listen(u.port,u.hostname).on("listening",function(){var t=p.address();e.log.writeln("Started connect web server on "+(t.address||"localhost")+":"+t.port+"."),e.config.set("connect."+l+".options.hostname",t.address||"localhost"),e.config.set("connect."+l+".options.port",t.port),e.event.emit("connect."+l+".listening",t.address||"localhost",t.port),u.open===!0?o(u.protocol+"://"+t.address+":"+t.port):typeof u.open=="string"&&o(u.open),c||f()}).on("error",function(t){t.code==="EADDRINUSE"?e.fatal("Port "+u.port+" is already in use by another process."):e.fatal(t)}),c&&e.log.write("Waiting forever...\n")})};